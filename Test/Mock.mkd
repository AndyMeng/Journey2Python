# unittest.mock
- [unittest.mock](https://docs.python.org/3.5/library/unittest.mock.html#module-unittest.mock)
- [A good tutorial on unittest](https://www.toptal.com/python/an-introduction-to-mocking-in-python)


## auto-speccing
- Create mock objects that have the same attributes and methods as the objects they are replacing.
- Example:
<pre>
from unittest.mock import create_autospec
  mock_function = create_autospec(LoggerFactory('DEBUG', 'dummy'))
</pre>
<pre>
mock_function2 = create_autospec(target_function, return_value='fishy')
</pre>

## MagicMock objects
- By default patch() will create a MagicMock for you
- Some of most used MagicMock objects
  - called
  - call_count
  - cal_args
  - return_value
  - side_effect
  - assert_called_with
- [Official doc (full list of MagicMock objects)](https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock)
- [Another short introduction of MagicMock objects](https://blog.fugue.co/2016-02-11-python-mocking-101.html)
