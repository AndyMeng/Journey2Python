# Python Test Frameworks

## 1.nose
- **nose** extends unittest to make testing easier
- [nose official page](http://nose.readthedocs.io/en/latest/)
- Install nose
  - Run `pip install nose`
- To run nose tests
  - Run `nosetests --with-coverage --cover-erase`
- To run specific test function
  - Run `nosetests test/test_file_name.py:TestClassName.test_function_name`

## 2.nose2
- successor of **nose** and based on **unittest2**
- [nose2 official page](http://nose2.readthedocs.io/en/latest/)

## 3.pytest
- [pytest official page](http://doc.pytest.org/en/latest/)
- Installation
  - Run `pip install -U pytest`
  - To check if correct pytest is install, run `pytest --version`
## 4.unittest
- [unitttest.mock](Mock.mkd)

---

## Sample libraries of a test suite
<pre>pylint == 1.6.4
nose == 1.3.7
coverage == 4.1
nose-randomly == 1.2.3
robotframework == 3.0
typing == 3.5.2.2
</pre>

## Useful libraries


## Git `pre-commit` hook
- [Customizing Git - Git Hooks](https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks)
- [Tutorial from Atlassian](https://www.atlassian.com/git/tutorials/git-hooks)
- The following is an example of `pre-commit` hook to run unit tests before `commit`. It works for both Linux and Git Bash in Windows.
<pre>
cat > .git/hooks/pre-commit << EOF
#!/bin/bash
nosetests --with-coverage --cover-erase --cover-xml
EOF
chmod +x .git/hooks/pre-commit
</pre>

---
